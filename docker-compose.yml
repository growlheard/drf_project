version: '3'
services:
  db:
    image: postgres
    env_file:
      - .env
    container_name: postgres_1
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  redis:
    image: "redis"
    container_name: redis
    expose:
      - "6379"
    ports:
      - "9999:8001"
      - "6379:6379"

    volumes:
      - ./redis-data:/var/lib/redis

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "python manage.py makemigrations
      && python manage.py migrate
      && python manage.py fill_database
      && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env

  celery:
    container_name: celery
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "celery -A config worker --loglevel=info"
    volumes:
      - .:/app
    depends_on:
      - db
      - web

  celery-beat:
    container_name: celery-beat
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "sleep 30 && celery -A config beat --loglevel=info"
    volumes:
      - .:/app
    depends_on:
      - db
      - redis

volumes:
  postgres_data:
